// Mocks generated by Mockito 5.4.0 from annotations
// in security_cam/test/src/app/domain/usecases/security_recordings/get_security_recordings_usecase_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:security_cam/src/app/domain/entities/authentication/authentication_entity.dart'
    as _i3;
import 'package:security_cam/src/app/domain/entities/recording/recording_entity.dart'
    as _i2;
import 'package:security_cam/src/app/domain/repositories/security_cam_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRecordingEntity_0 extends _i1.SmartFake
    implements _i2.RecordingEntity {
  _FakeRecordingEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthenticationEntity_1 extends _i1.SmartFake
    implements _i3.AuthenticationEntity {
  _FakeAuthenticationEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SecurityCamRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecurityCamRepository extends _i1.Mock
    implements _i4.SecurityCamRepository {
  MockSecurityCamRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.RecordingEntity> getSecurityRecordings({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSecurityRecordings,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i5.Future<_i2.RecordingEntity>.value(_FakeRecordingEntity_0(
          this,
          Invocation.method(
            #getSecurityRecordings,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i5.Future<_i2.RecordingEntity>);
  @override
  _i5.Future<_i3.AuthenticationEntity> loginValidation({
    required String? user,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginValidation,
          [],
          {
            #user: user,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i3.AuthenticationEntity>.value(
            _FakeAuthenticationEntity_1(
          this,
          Invocation.method(
            #loginValidation,
            [],
            {
              #user: user,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i3.AuthenticationEntity>);
}
